<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" id="root">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace"/>
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0"/>
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string"/>
              <xsd:attribute name="type" type="xsd:string"/>
              <xsd:attribute name="mimetype" type="xsd:string"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string"/>
              <xsd:attribute name="name" type="xsd:string"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1"/>
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3"/>
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required"/>
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AccentColorSettings.Description" xml:space="preserve">
    <value>各種強調色</value>
  </data>
  <data name="AccentColorSettings.Header" xml:space="preserve">
    <value>顏色</value>
  </data>
  <data name="APIVersionSettings.Description" xml:space="preserve">
    <value>設置使用的酷安版本</value>
  </data>
  <data name="APIVersionSettings.Header" xml:space="preserve">
    <value>API 版本</value>
  </data>
  <data name="CompactOverlaySettings.Description" xml:space="preserve">
    <value>進入或退出畫中畫模式</value>
  </data>
  <data name="CompactOverlaySettings.Header" xml:space="preserve">
    <value>畫中畫模式</value>
  </data>
  <data name="EnterPIP.Content" xml:space="preserve">
    <value>進入畫中畫模式</value>
  </data>
  <data name="GetURLContent.Header" xml:space="preserve">
    <value>獲取內容</value>
  </data>
  <data name="LanguageSettings.Description" xml:space="preserve">
    <value>選擇語言並重啟應用來更改語言</value>
  </data>
  <data name="LanguageSettings.Header" xml:space="preserve">
    <value>語言</value>
  </data>
  <data name="NewWindowSettings.Description" xml:space="preserve">
    <value>新建一個視窗</value>
  </data>
  <data name="NewWindowSettings.Header" xml:space="preserve">
    <value>新視窗（僅支援 1903 及以上）</value>
  </data>
  <data name="OpenBrowser.Header" xml:space="preserve">
    <value>用內置瀏覽器打開</value>
  </data>
  <data name="OpenURL.Header" xml:space="preserve">
    <value>打開頁面</value>
  </data>
  <data name="OutPIP.Content" xml:space="preserve">
    <value>退出</value>
  </data>
  <data name="ProgressSettings.Description" xml:space="preserve">
    <value>測試標題列上的進度環</value>
  </data>
  <data name="ProgressSettings.Header" xml:space="preserve">
    <value>進度</value>
  </data>
  <data name="SetProgressValue.Description" xml:space="preserve">
    <value>設置進度環的值</value>
  </data>
  <data name="SetProgressValue.Header" xml:space="preserve">
    <value>進度值</value>
  </data>
  <data name="SettingsFlyoutSettings.Description" xml:space="preserve">
    <value>打開 Charm 側邊欄設置</value>
  </data>
  <data name="SettingsFlyoutSettings.Header" xml:space="preserve">
    <value>打開設置</value>
  </data>
  <data name="SlimCountSettings.Description" xml:space="preserve">
    <value>同時可以載入的圖片數量</value>
  </data>
  <data name="SlimCountSettings.Header" xml:space="preserve">
    <value>多任務數</value>
  </data>
  <data name="TitleBar.Title" xml:space="preserve">
    <value>測試</value>
  </data>
  <data name="TitleBarSettings.Description" xml:space="preserve">
    <value>將內容擴展到標題列</value>
  </data>
  <data name="TitleBarSettings.Header" xml:space="preserve">
    <value>標題列</value>
  </data>
  <data name="TokenVersionSettings.Description" xml:space="preserve">
    <value>設置使用的 Token 獲取方法</value>
  </data>
  <data name="TokenVersionSettings.Header" xml:space="preserve">
    <value>Token 版本</value>
  </data>
  <data name="UITestSettingsHeader.Header" xml:space="preserve">
    <value>介面測試</value>
  </data>
  <data name="UseAPI2Settings.Description" xml:space="preserve">
    <value>是否使用新的酷安介面</value>
  </data>
  <data name="UseAPI2Settings.Header" xml:space="preserve">
    <value>是否使用 API2</value>
  </data>
  <data name="UseCompositorSettings.Description" xml:space="preserve">
    <value>是否在吸頂清單中使用合成動畫</value>
  </data>
  <data name="UseCompositorSettings.Header" xml:space="preserve">
    <value>是否使用合成動畫</value>
  </data>
  <data name="WebTestSettings.Description" xml:space="preserve">
    <value>測試網路相關內容</value>
  </data>
  <data name="WebTestSettings.Header" xml:space="preserve">
    <value>Web 測試</value>
  </data>
  <data name="WebTestSettingsHeader.Header" xml:space="preserve">
    <value>網路測試</value>
  </data>
  <data name="APISettings.Description" xml:space="preserve">
    <value>修改与酷安服务器通信的配置</value>
  </data>
  <data name="APISettings.Header" xml:space="preserve">
    <value>API 设置</value>
  </data>
  <data name="CustomUASettings.Header" xml:space="preserve">
    <value>修改 UserAgent</value>
  </data>
  <data name="IsCustomUASettings.Description" xml:space="preserve">
    <value>使用自定义的 UserAgent</value>
  </data>
  <data name="IsCustomUASettings.Header" xml:space="preserve">
    <value>是否修改 UserAgent</value>
  </data>
  <data name="WindowSettingsHeader.Header" xml:space="preserve">
    <value>窗口测试</value>
  </data>
  <data name="CustomAPISettings.Description" xml:space="preserve">
    <value>设置自定义的兼容版本</value>
  </data>
  <data name="CustomAPISettings.Header" xml:space="preserve">
    <value>自定义版本号</value>
  </data>
</root>