<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" id="root">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace"/>
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0"/>
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string"/>
              <xsd:attribute name="type" type="xsd:string"/>
              <xsd:attribute name="mimetype" type="xsd:string"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string"/>
              <xsd:attribute name="name" type="xsd:string"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1"/>
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3"/>
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required"/>
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AccentColorSettings.Description" xml:space="preserve">
    <value>各种强调色</value>
  </data>
  <data name="AccentColorSettings.Header" xml:space="preserve">
    <value>颜色</value>
  </data>
  <data name="APIVersionSettings.Description" xml:space="preserve">
    <value>设置使用的酷安版本</value>
  </data>
  <data name="APIVersionSettings.Header" xml:space="preserve">
    <value>API 版本</value>
  </data>
  <data name="CompactOverlaySettings.Description" xml:space="preserve">
    <value>进入或退出画中画模式</value>
  </data>
  <data name="CompactOverlaySettings.Header" xml:space="preserve">
    <value>画中画模式</value>
  </data>
  <data name="EnterPIP.Content" xml:space="preserve">
    <value>进入画中画模式</value>
  </data>
  <data name="GetURLContent.Header" xml:space="preserve">
    <value>获取内容</value>
  </data>
  <data name="LanguageSettings.Description" xml:space="preserve">
    <value>选择语言并重启应用来更改语言</value>
  </data>
  <data name="LanguageSettings.Header" xml:space="preserve">
    <value>语言</value>
  </data>
  <data name="NewWindowSettings.Description" xml:space="preserve">
    <value>新建一个窗口</value>
  </data>
  <data name="NewWindowSettings.Header" xml:space="preserve">
    <value>新窗口（仅支持 1903 及以上）</value>
  </data>
  <data name="OpenBrowser.Header" xml:space="preserve">
    <value>用内置浏览器打开</value>
  </data>
  <data name="OpenURL.Header" xml:space="preserve">
    <value>打开页面</value>
  </data>
  <data name="OutPIP.Content" xml:space="preserve">
    <value>退出</value>
  </data>
  <data name="ProgressSettings.Description" xml:space="preserve">
    <value>测试窗口顶部的进度条</value>
  </data>
  <data name="ProgressSettings.Header" xml:space="preserve">
    <value>进度</value>
  </data>
  <data name="SetProgressValue.Description" xml:space="preserve">
    <value>设置进度条的值</value>
  </data>
  <data name="SetProgressValue.Header" xml:space="preserve">
    <value>进度值</value>
  </data>
  <data name="SettingsFlyoutSettings.Description" xml:space="preserve">
    <value>打开 Charm 侧边栏设置</value>
  </data>
  <data name="SettingsFlyoutSettings.Header" xml:space="preserve">
    <value>打开设置</value>
  </data>
  <data name="SlimCountSettings.Description" xml:space="preserve">
    <value>同时可以加载的图片数量</value>
  </data>
  <data name="SlimCountSettings.Header" xml:space="preserve">
    <value>多任务数</value>
  </data>
  <data name="TitleBar.Title" xml:space="preserve">
    <value>测试</value>
  </data>
  <data name="TitleBarSettings.Description" xml:space="preserve">
    <value>将内容扩展到标题栏</value>
  </data>
  <data name="TitleBarSettings.Header" xml:space="preserve">
    <value>标题栏</value>
  </data>
  <data name="TokenVersionSettings.Description" xml:space="preserve">
    <value>设置使用的 Token 获取方法</value>
  </data>
  <data name="TokenVersionSettings.Header" xml:space="preserve">
    <value>Token 版本</value>
  </data>
  <data name="UITestSettingsHeader.Header" xml:space="preserve">
    <value>界面测试</value>
  </data>
  <data name="UseAPI2Settings.Description" xml:space="preserve">
    <value>是否使用新的酷安接口</value>
  </data>
  <data name="UseAPI2Settings.Header" xml:space="preserve">
    <value>是否使用 API2</value>
  </data>
  <data name="UseCompositorSettings.Description" xml:space="preserve">
    <value>是否在吸顶列表中使用合成动画</value>
  </data>
  <data name="UseCompositorSettings.Header" xml:space="preserve">
    <value>是否使用合成动画</value>
  </data>
  <data name="WebTestSettings.Description" xml:space="preserve">
    <value>测试网络相关内容</value>
  </data>
  <data name="WebTestSettings.Header" xml:space="preserve">
    <value>Web 测试</value>
  </data>
  <data name="WebTestSettingsHeader.Header" xml:space="preserve">
    <value>网络测试</value>
  </data>
</root>